/**
 * Copyright Â© 2016 Open Text.  All Rights Reserved.
 */
package com.opentext.otag.sdk.connector;

import com.opentext.otag.sdk.handlers.AuthRequestHandler;
import com.opentext.otag.sdk.types.v3.sdk.EIMConnector;
import com.opentext.otag.service.context.components.AWComponent;

/**
 * Enterprise Information Management System Connector.
 * <p>
 * Implement this type to model the behaviour required to connect to an existing
 * back end system. Open Text has a number of these offerings, Content Server, Media
 * Manager, MBPM Metastorm etc...
 * <p>
 * Connector implementations can be used by multiple AppWorks services/apps to provide
 * consistent access to collaborating services, and provides the following:
 * <ul>
 * <li>connection details to a specific EIM installation</li>
 * <li>AppWorks Gateway trusted server (API) key integration, provided service-to-service auth</li>
 * <li>pluggable auth provided by the EIM itself, including auth response decoration,
 * and also delegation of primary auth to a connector</li>
 * <li>proxy mapping settings used to expose an EIMs web resources required for app/service</li>
 * </ul>
 *
 * @author Rhys Evans rhyse@opentext.com
 * @version 16.0.0
 */
public interface EIMConnectorService extends AWComponent {

    /**
     * Name that we know the EIM by, 'ContentServer' for instance.
     *
     * @return EIM name
     */
    String getConnectorName();

    /**
     * Allow users of the the connector to understand which version of the EIM service
     * they are working with.
     *
     * @return EIM service version
     */
    String getConnectorVersion();

    /**
     * Get the URL to the EIM service endpoint. WIll be used by HTTP-based clients to
     * work with the service.
     *
     * @return the connection URL string
     */
    String getConnectionString();

    /**
     * The config setting key, this key can be used to identify the configuration setting
     * stored in the AppWorks Gateway for this connector.
     *
     * @return the config setting key
     */
    String getConnectionStringSettingKey();

    /**
     * Get the name that the AppWorks Gateway should use for the Trusted Provider (server) 
     * API key it establishes.
     *
     * @return EIM server name
     * 
     * @see com.opentext.otag.sdk.types.v3.TrustedProvider
     */
    String getTrustedProviderName();

    /**
     * The API key generated by the AppWorks Gateway for the server.
     *
     * @return generated API key for this EIM
     * 
     * @see com.opentext.otag.sdk.types.v3.TrustedProvider
     */
    String getTrustedProviderKey();

    /**
     * Send the key to the EIM service, it should provide an endpoint to accept this value.
     * You may just have to add it to the EIM service manually in some cases.
     *
     * @param serverName the Trusted Server name of the EIM
     * @param key        generated API key
     * @return true if we managed register the key
     * 
     * @see com.opentext.otag.sdk.types.v3.TrustedProvider
     */
    boolean registerTrustedProviderKey(String serverName, String key);

    /**
     * Get the auth handler that should be used with this service.
     *
     * @return auth handler
     */
    AuthRequestHandler getAuthHandler();

    /**
     * Administrative users can make updates to the connector that we should be
     * informed about.
     *
     * @param updated updated connector state
     */
    void onUpdateConnector(EIMConnector updated);

}
